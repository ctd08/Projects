#include <stdio.h>
#include <stdbool.h>


// Function to check if a year is a leap year
bool is_leap_year(int year) {
    if (year % 4 == 0) {
        if (year % 100 == 0) {
            if (year % 400 == 0)
                return true;
            else
                return false;
        } else {
            return true;
        }
    } else {
        return false;
    }
}

// Function to add days to a given date
void add_days_to_date(int *mm, int *dd, int *yy, int days_left_to_add) {
    int days_in_month[12] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30};

    while (days_left_to_add > 0) {
        int days_left_in_month = days_in_month[*mm] - *dd;

        if (*mm == 2 && is_leap_year(*yy)) {
            days_left_in_month++;
        }

        if (days_left_to_add <= days_left_in_month) {
            *dd += days_left_to_add;
            days_left_to_add = 0;
        } else {
            days_left_to_add -= days_left_in_month + 1;

            if (*mm == 12) {
                *mm = 1;
                *yy++;
            } else {
                *mm++;
            }

            *dd = 1;
        }
    }
}

int main() {
    // Test the Leap Year function
    int year;
    printf("Enter a year between 1800 and 10000: ");
    scanf("%d", &year);

    if (is_leap_year(year)) {
        printf("%d is a leap year.\n", year);
    } else {
        printf("%d is not a leap year.\n", year);
    }

    // Test the add days to date function
    int mm, dd, yy, days_left_to_add;
    printf("\nPlease enter a date between the years 1800 and 10000 in the format mm dd yy and provide the number of days to add to this date: ");
    scanf("%d %d %d %d", &mm, &dd, &yy, &days_left_to_add);

    add_days_to_date(&mm, &dd, &yy, days_left_to_add);

    printf("The new date is %d/%d/%d.\n", mm, dd, yy);

    return 0;
}

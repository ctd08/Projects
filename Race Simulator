#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

// Structures

typedef struct RaceCar RaceCar;
struct RaceCar {
    char driverName[20];
    char raceCarColor[20];
    int totalLapTime;
};

typedef struct Race Race;
struct Race {
    int numberOfLaps;
    int currentLap;
    char firstPlaceDriverName[20];
    char firstPlaceRaceCarColor[20];
};

// Print Functions

void printIntro() {
    printf("Welcome to our main event digital race fans!\n");
    printf("I hope everybody has their snacks because we are about to begin!\n");
}

void printCountDown() {
    printf("Racers Ready!\n");
    printf("In...\n");
    for (int i = 5; i > 0; i--) {
        printf("%d\n", i);
    }
    printf("Race!\n");
}

void printFirstPlaceAfterLap(Race race) {
    printf("After lap number %d\n", race.currentLap);
    printf("First Place Is: %s in the %s race car!\n", race.firstPlaceDriverName, race.firstPlaceRaceCarColor);
}

void printCongratulation(Race race) {
    printf("Let's all congratulate %s in the %s race car for an amazing performance.\n", race.firstPlaceDriverName, race.firstPlaceRaceCarColor);
    printf("It truly was a great race and everybody have a goodnight!\n");
}

// Logic Functions

int calculateTimeToCompleteLap() {
    int speed, acceleration, nerves;
    speed = rand() % 3 + 1;
    acceleration = rand() % 3 + 1;
    nerves = rand() % 3 + 1;
    return speed + acceleration + nerves;
}

void updateRaceCar(RaceCar *raceCar) {
    raceCar->totalLapTime += calculateTimeToCompleteLap();
}

void updateFirstPlace(Race *race, RaceCar *raceCar1, RaceCar *raceCar2) {
    if (raceCar1->totalLapTime <= raceCar2->totalLapTime) {
        strcpy(race->firstPlaceDriverName, raceCar1->driverName);
        strcpy(race->firstPlaceRaceCarColor, raceCar1->raceCarColor);
    } else {
        strcpy(race->firstPlaceDriverName, raceCar2->driverName);
        strcpy(race->firstPlaceRaceCarColor, raceCar2->raceCarColor);
    }
}

// Start Race

void startRace(RaceCar *raceCar1, RaceCar *raceCar2) {
    Race race = {5, 1, "", ""};
    for (int i = 0; i < race.numberOfLaps; i++) {
        updateRaceCar(raceCar1);
        updateRaceCar(raceCar2);
        updateFirstPlace(&race, raceCar1, raceCar2);
        printFirstPlaceAfterLap(race);
    }
    printCongratulation(race);
}

int main() {
    srand(time(NULL));

    RaceCar raceCar1 = {"George", "yellow"};
    RaceCar raceCar2 = {"Cosmo", "orange"};

    printIntro();
    printCountDown();
    startRace(&raceCar1, &raceCar2);

    return 0;
}
